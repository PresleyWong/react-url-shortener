{"version":3,"sources":["components/api.jsx","components/inputForm.jsx","components/linkTableItem.jsx","components/linkTable.jsx","components/notification.jsx","components/loader.jsx","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","apikey","InputForm","props","textInput","React","createRef","state","url","this","current","value","setState","checkHypertextTransferProtocol","onShorten","str","RegExp","test","Jumbotron","fluid","Container","InputGroup","className","id","FormControl","ref","onChange","handleChange","placeholder","aria-label","aria-describedby","Append","Button","variant","onClick","event","handleClick","Component","LinkTableItem","index","shortUrl","link","longUrl","destination","href","target","rel","size","urlId","onDelete","LinkTable","handleDelete","tableItems","links","map","i","key","Table","responsive","hover","Notification","Modal","show","Header","closeButton","Title","Body","message","Footer","onClose","Loader","Spinner","animation","App","renderModal","msg","handleShowModal","renderLoader","showModal","getLinks","a","showLoader","API","get","params","orderBy","orderDir","limit","res","data","createLink","post","catch","error","response","deleteLink","delete","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","console"],"mappings":"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","file":"static/js/main.5a2da146.chunk.js","sourcesContent":["import axios from \"axios\";\nconst KEY = \"27eab56fe9274b0b96c06bf00e650d78\";\n\nexport default axios.create({\n  baseURL: \"https://api.rebrandly.com/v1/\",\n  headers: { apikey: KEY }\n});\n","import React, { Component } from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\n\nclass InputForm extends Component {\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef();\n    this.state = { url: \"\" };\n  }\n\n  handleChange() {\n    const url = this.textInput.current.value;\n    this.setState({ url });\n  }\n\n  handleClick(url) {\n    if (this.checkHypertextTransferProtocol(url) !== true)\n      url = `https://${url}`;\n\n    this.props.onShorten(url);\n    this.textInput.current.value = \"\";\n  }\n\n  checkHypertextTransferProtocol(str) {\n    const pattern = new RegExp(\"^https?:\\\\/\\\\/\");\n    return !!pattern.test(str);\n  }\n\n  render() {\n    return (\n      <Jumbotron fluid>\n        <Container>\n          <h1>URL Shortener</h1>\n          <InputGroup className=\"mb-3\" id=\"url-input\">\n            <FormControl\n              ref={this.textInput}\n              onChange={() => this.handleChange()}\n              placeholder=\"Shorten your link\"\n              aria-label=\"Shorten your link\"\n              aria-describedby=\"basic-addon2\"\n            />\n            <InputGroup.Append>\n              <Button\n                variant=\"outline-secondary\"\n                onClick={event => this.handleClick(this.state.url)}\n              >\n                Shorten!\n              </Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Container>\n      </Jumbotron>\n    );\n  }\n}\n\nexport default InputForm;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nconst LinkTableItem = props => {\n  const index = props.index;\n  const shortUrl = props.link.shortUrl;\n  const longUrl = props.link.destination;\n  const id = props.link.id;\n  const handleDelete = (event, urlId) => {\n    props.onDelete(urlId);\n  };\n\n  return (\n    <tr>\n      <td>{index}</td>\n      <td>{longUrl}</td>\n      <td>\n        <a\n          href={`https://${shortUrl}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {props.link.shortUrl}\n        </a>\n      </td>\n      <td>\n        <Button\n          variant=\"outline-danger\"\n          size=\"sm\"\n          onClick={event => handleDelete(event, id)}\n        >\n          Delete\n        </Button>\n      </td>\n    </tr>\n  );\n};\n\nexport default LinkTableItem;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Table from \"react-bootstrap/Table\";\nimport LinkTableItem from \"./linkTableItem\";\n\nconst LinkTable = props => {\n  const handleDelete = props.onDelete;\n  const tableItems = props.links.map((link, i) => {\n    return (\n      <LinkTableItem\n        key={i}\n        link={link}\n        index={i + 1}\n        onDelete={handleDelete}\n      />\n    );\n  });\n\n  return (\n    <Container>\n      <Table responsive hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Long URL</th>\n            <th>Short URL</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>{tableItems}</tbody>\n      </Table>\n    </Container>\n  );\n};\n\nexport default LinkTable;\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nconst Notification = props => {\n  const handleClose = () => {\n    props.onClose(false);\n  };\n\n  return (\n    <>\n      <Modal show>\n        <Modal.Header closeButton>\n          <Modal.Title>Notification</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{props.message}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default Notification;\n","import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Container from \"react-bootstrap/Container\";\n\nconst Loader = () => {\n  return (\n    <Container>\n      <div className=\"text-center\">\n        <Spinner animation=\"border\" variant=\"info\" />\n      </div>\n    </Container>\n  );\n};\n\nexport default Loader;\n","import React, { Component } from \"react\";\nimport API from \"./components/api\";\nimport InputForm from \"./components/inputForm\";\nimport LinkTable from \"./components/linkTable\";\nimport Notification from \"./components/notification\";\nimport Loader from \"./components/loader\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      links: [],\n      showModal: false,\n      showLoader: false,\n      message: \"\"\n    };\n  }\n\n  renderModal = msg => {\n    return <Notification message={msg} onClose={this.handleShowModal} />;\n  };\n\n  renderLoader = () => {\n    return <Loader />;\n  };\n\n  handleShowModal = showModal => {\n    this.setState({ showModal });\n  };\n\n  getLinks = async () => {\n    this.setState({ showLoader: true });\n    let res = await API.get(\"/links\", {\n      params: {\n        orderBy: \"createdAt\",\n        orderDir: \"desc\",\n        limit: \"25\"\n      }\n    });\n    let links = res.data;\n    this.setState({ links });\n    this.setState({ showLoader: false });\n  };\n\n  createLink = async url => {\n    await API.post(\"/links/\", { destination: url }).catch(error => {\n      this.setState({ message: error.response.data.message });\n      this.handleShowModal(true);\n    });\n    this.getLinks();\n  };\n\n  deleteLink = async id => {\n    await API.delete(`/links/${id}`);\n    this.getLinks();\n  };\n\n  componentDidMount() {\n    this.getLinks();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.showModal && this.renderModal(this.state.message)}\n        <InputForm onShorten={this.createLink} />\n        <LinkTable links={this.state.links} onDelete={this.deleteLink} />\n        {this.state.showLoader && this.renderLoader()}\n      </React.Fragment>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}